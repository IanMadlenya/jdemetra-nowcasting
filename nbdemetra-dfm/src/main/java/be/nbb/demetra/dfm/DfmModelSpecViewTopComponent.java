/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package be.nbb.demetra.dfm;

import ec.tss.Dfm.DfmDocument;
import javax.swing.JComponent;
import javax.swing.JLabel;
import javax.swing.JToolBar;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.core.spi.multiview.CloseOperationState;
import org.netbeans.core.spi.multiview.MultiViewDescription;
import org.netbeans.core.spi.multiview.MultiViewElement;
import org.netbeans.core.spi.multiview.MultiViewElementCallback;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//be.nbb.demetra.dfm//DfmModelSpecView//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "DfmModelSpecViewTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_NEVER
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@Messages({
    "CTL_DfmModelSpecViewAction=DfmModelSpecView",
    "CTL_DfmModelSpecViewTopComponent=DfmModelSpecView Window",
    "HINT_DfmModelSpecViewTopComponent=This is a DfmModelSpecView window"
})
public final class DfmModelSpecViewTopComponent extends TopComponent implements MultiViewElement, MultiViewDescription {

    public DfmModelSpecViewTopComponent() {
        initComponents();
        setName(Bundle.CTL_DfmModelSpecViewTopComponent());
        setToolTipText(Bundle.HINT_DfmModelSpecViewTopComponent());

        setDisplayName("Model");
    }

    public DfmModelSpecViewTopComponent(DfmDocument document) {
        this();
        dfmModelSpecView1.setModel(document);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dfmModelSpecView1 = new be.nbb.demetra.dfm.DfmModelSpecView();

        setLayout(new java.awt.BorderLayout());
        add(dfmModelSpecView1, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private be.nbb.demetra.dfm.DfmModelSpecView dfmModelSpecView1;
    // End of variables declaration//GEN-END:variables

    void writeProperties(java.util.Properties p) {
    }

    void readProperties(java.util.Properties p) {
    }

    //<editor-fold defaultstate="collapsed" desc="MultiViewElement">
    @Override
    public void componentOpened() {
    }

    @Override
    public void componentClosed() {
    }

    @Override
    public JComponent getVisualRepresentation() {
        return this;
    }

    @Override
    public JComponent getToolbarRepresentation() {
        JToolBar result = new JToolBar();
        result.addSeparator();
        result.add(new JLabel(" nvars=4 "));
        result.add(new JLabel(" nlags=4 "));
        return result;
    }

    @Override
    public void setMultiViewCallback(MultiViewElementCallback callback) {
    }

    @Override
    public CloseOperationState canCloseElement() {
        return CloseOperationState.STATE_OK;
    }

    @Override
    public void componentActivated() {
        super.componentActivated();
    }

    @Override
    public void componentDeactivated() {
        super.componentDeactivated();
    }

    @Override
    public void componentHidden() {
        super.componentHidden();
    }

    @Override
    public void componentShowing() {
        super.componentShowing();
    }
    //</editor-fold>

    //<editor-fold defaultstate="collapsed" desc="MultiViewDescription">
    @Override
    public MultiViewElement createElement() {
        return this;
    }

    @Override
    public String preferredID() {
        return super.preferredID();
    }
    //</editor-fold>
}
